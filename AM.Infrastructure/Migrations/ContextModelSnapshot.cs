// <auto-generated />
using System;
using AM.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AM.Infrastructure.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("AM.ApplicationCore.Domain.Jouer", b =>
                {
                    b.Property<int>("JoeurFK")
                        .HasColumnType("int");

                    b.Property<int>("TournoiFK")
                        .HasColumnType("int");

                    b.Property<int>("Score")
                        .HasColumnType("int");

                    b.HasKey("JoeurFK", "TournoiFK");

                    b.HasIndex("TournoiFK");

                    b.ToTable("Jouers");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Joueur", b =>
                {
                    b.Property<int>("JoueurId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("JoueurId"), 1L, 1);

                    b.Property<string>("Genre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaysFk")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Photo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("JoueurId");

                    b.HasIndex("PaysFk");

                    b.ToTable("joueurs");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Pays", b =>
                {
                    b.Property<string>("CodePays")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Monnaie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodePays");

                    b.ToTable("Pays");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Tournoi", b =>
                {
                    b.Property<int>("NoTour")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NoTour"), 1L, 1);

                    b.Property<double>("Coef")
                        .HasColumnType("float");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<double>("Dotation")
                        .HasColumnType("float");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NoTour");

                    b.ToTable("Tournoi");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Jouer", b =>
                {
                    b.HasOne("AM.ApplicationCore.Domain.Joueur", "Joueur")
                        .WithMany("Jouers")
                        .HasForeignKey("JoeurFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AM.ApplicationCore.Domain.Tournoi", "Tournoi")
                        .WithMany("Jouers")
                        .HasForeignKey("TournoiFK")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Joueur");

                    b.Navigation("Tournoi");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Joueur", b =>
                {
                    b.HasOne("AM.ApplicationCore.Domain.Pays", "Pays")
                        .WithMany("joueurs")
                        .HasForeignKey("PaysFk")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pays");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Joueur", b =>
                {
                    b.Navigation("Jouers");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Pays", b =>
                {
                    b.Navigation("joueurs");
                });

            modelBuilder.Entity("AM.ApplicationCore.Domain.Tournoi", b =>
                {
                    b.Navigation("Jouers");
                });
#pragma warning restore 612, 618
        }
    }
}
